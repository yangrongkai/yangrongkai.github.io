---
layout: post
title:  "架构稳定性方案"
date:   2018-03-08 15:00:00
categories: development
ascription: team
comments: true
---

##### 稳定性思考
* 过载
	* 出现瓶颈
		1. 过载保护（至少保证一部分人可以用）
		2. 尽快处理 **架构** 问题，解决瓶颈
	* 未达到瓶颈（还有扩容的余地）
		1. 过载保护
		2. 尽快解决 **扩容** 问题，提升负载
		3. 评估架构瓶颈，考虑是否进行介入
* 未过载
	* 安全
		1. 流量控制（ip、用户流量）
		2. 网络攻击
		3. 反扒机制
		4. 系统漏洞
		5. 代码安全
	* 监控
		1. 异常监控（ip、用户、行为）
		2. 预警机制（负载、稳定等）
		3. 架构评估、设计
		4. 系统容灾
		5. 发布、回滚


---

###### 过载保护（流量监控）
1. 设置web服务器阈值
2. 提出web服务器监控机制
3. 设置用户使用阈值
4. 监控缓存及数据库流量、阈值

###### 反扒机制
1. 制定爬虫陷阱
2. 制定用户流量监控

###### 网络攻击

###### 系统漏洞

###### 系统容灾

---

##### token设计<small>（从用户的角度考虑）</small>

1. 有效性
	* 行为有效
		* 流量有效
		* 功能有效
		* 操作有效
		* 数据有效
	* 验证有效性
		* 账户、密码有效
		* 授权有效
2. 时效性
	* 保证在一段时间内是有效的
	* 保证不暴露用户关键信息
	* 提出续签机制
3. 唯一性
	* 保证只有一个token是有效的

	<br/>

##### 服务器设计<small>（从服务器的角度考虑）</small>
1. 过载保护
	* 连接保护
	* IP流量保护
2. 网络攻击防范
3. 反扒机制设计
	* 反扒陷阱
		* 固定陷阱
		* 临时陷阱
	* 异常报警
